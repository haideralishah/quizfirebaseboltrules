//----------------------------------
//      RULES *** RULES *** RULES
//----------------------------------


//----------------------------------
//      rules for user question bank
//----------------------------------

path /user-question-banks/{userid}/{questionBankUniqueID} is UserQuestionBanksType{}


//----------------------------------
//      rules for question bank memberships
//----------------------------------

path /question-bank-memberships/{questionBankUniqueID}/{UserID} is UserQuestionBanksType{}

//----------------------------------
//      rules for question bank
//----------------------------------
path /question-bank/{questionBankUniqueID} is QuestionBankType{}

//----------------------------------
//      rules for question bank topics & AutoSubTopicID
//----------------------------------
path /question-bank-topics/{questionBankUniqueID}/{autotopicid} is QuestionBankTopicsType{

    /subtopics {

        validate() {this.hasChildren(['autoSubTopicID']);}
        /{autoSubTopicID} is AutoSubTopicID{
          /questions/{questionID}{
                    validate() { this.isBoolean() }
                }
              }
            }

    /question/{questionID} is Boolean{
    }


}

//----------------------------------
//      rules for question-bank-quizes
//----------------------------------

path /question-bank-quizes/{questionBankID}{
    validate() {this.hasChildren(['quizID']);}

    /{quizID} is Boolean{  }

}


//----------------------------------
//      rules for group-quizes
//----------------------------------

path /group-quizes/{groupID}{
    validate() {this.hasChildren(['quizID']);}
    /{quizID} is Boolean{  }


}


//----------------------------------
//      rules for quizes
//----------------------------------

path /quizes/{quizID} is QuizesType{ }

//----------------------------------
//      rules for quiz-topics
//----------------------------------

path /quiz-topics/{quizID}/{autotopicID} is QuestionBankTopicsType{

    /subtopics {

        validate() {this.hasChildren(['autoSubTopicID']);}
        /{autoSubTopicID} is AutoSubTopicID{
        /questions/{questions}{
                    validate() { this.isBoolean() }
          }
        }
     }

    /questions/{questionsID} is Boolean{ }
}


//----------------------------------
//      rules for quiz-questions
//----------------------------------

path /quiz-questions/{quizID}/{questionID} is QuestionIDType{ }

//----------------------------------
//      rules for quiz-answers
//----------------------------------

path /quiz-answers/{quizID}/{questionID} is QuizAnswersType{

    /options {
        validate() {this.hasChildren(['optionID']);}
        /{optionID} is OptionID{ }
    }
}
//----------------------------------
//      rules for quiz-answer-sheet
//----------------------------------

path /quiz-answer-sheet/{groupid}/{quizid}/{userid}/{questionID} is QuestionIDGroupidType{

}








//----------------------------------
//      TYPING *** TYPING *** TYPING
//----------------------------------


//----------------------------------
//      type definition for UserQuestionBanksType
//----------------------------------

type UserQuestionBanksType {
    "member-type": MemberType
}

//----------------------------------
//      type definition for QuestionBankType
//----------------------------------
type QuestionBankType {
    timestamp: CurrentTimeStamp,
    title: String,
    desc: String
}

//----------------------------------
//      type definition for QuestionBankTopicsType
//----------------------------------
type QuestionBankTopicsType{
    timestamp: CurrentTimeStamp,
    title: String,
    desc: String,
    subtopics: Object,
    question: Object
}


//----------------------------------
//      type definition for AutoSubTopicID
//----------------------------------

type AutoSubTopicID {

    timestamp: CurrentTimeStamp,
    title: String,
    desc: String,
    questions: Object

    //AutoSubTopicID: Object

}

//----------------------------------
//      type definition for QuizesType
//----------------------------------

type QuizesType{

        title: String,
        desc: String,
        duration: Number,
        "num-questions": Number

}

//----------------------------------
//      type definition for QuestionIDType
//----------------------------------
type QuestionIDType{

    title: String,
    type: QuestionType,
    desc: String,
    options: Optiontype

}

type Optiontype {
    $optionID: Object
    validate() { this.hasChildren(["optionID"])}
}

//----------------------------------
//      type definition for QuizAnswersType
//----------------------------------
type QuizAnswersType{
    title: String,
    type: QuestionType,
    "desc-html": String,
    "discussion-html": String,
    options: Optiontype

}

//----------------------------------
//      type definition for OptionID
//----------------------------------
type OptionID{
    html: String,
    correct: Boolean,
    "discussion-html": String

}


type QuestionIDGroupidType{
    optionID: Boolean,  //discuss
    correct: Boolean
}





//----------------------------------
//      EXTENSION *** EXTENSION *** EXTENSION
//----------------------------------


//----------------------------------
//      extension for NumberForMemberType
//----------------------------------

type MemberType extends Number {
    validate() { this.val() == 1 || this.val() == 2 }
}


//----------------------------------
//      extension for CurrentTimeStamp
//----------------------------------

type CurrentTimeStamp extends Number {
    validate() { this.val() <= Date.now }
}

//----------------------------------
//      extension for QuestionType
//----------------------------------

type QuestionType extends Number{
    validate() { this.val() == 1 || this.val() == 2 || this.val() == 3 }
}

//----------------------------------










