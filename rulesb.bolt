//----------------------------------
//      RULES *** RULES *** RULES
//----------------------------------


//----------------------------------
//      rules for user question bank
//----------------------------------

path /user-question-banks/{userid}/{questionBankUniqueID} is MemberTypeValid{}


//----------------------------------
//      rules for question bank memberships
//----------------------------------

path /question-bank-memberships/{questionBankUniqueID}/{UserID} is MemberTypeValid;

//----------------------------------
//      rules for question bank
//----------------------------------
path /question-bank/{questionBankUniqueID} is QuestionBank;

//----------------------------------
//      rules for question bank topics & AutoSubTopicID
//----------------------------------
path /question-bank-topics/{questionBankUniqueID}/{autotopicid} is QuestionBankTopics{

    /subtopics {

        validate() {this.hasChildren(['autoSubTopicID']);}
        /{autoSubTopicID} is AutoSubTopicID{
        }

        /{autoSubTopicID}/questions/{questionID}{
            validate() { this.isBoolean() }
        }


    }

    /question/{questionID}{
        validate() { this.isBoolean() }
    }


}

//----------------------------------
//      rules for question-bank-quizes
//----------------------------------

path /question-bank-quizes/{questionBankID}{
    validate() {this.hasChildren(['quizID']);}

    /{quizID}{
        validate() { this.isBoolean() }
    }

}


//----------------------------------
//      rules for group-quizes
//----------------------------------

path /group-quizes/{groupID}{
    validate() {this.hasChildren(['quizID']);}
    /{quizID}{
        validate() { this.isBoolean() }
    }

}


//----------------------------------
//      rules for quizes
//----------------------------------

path /quizes/{quizID} is Quizes{


}

//----------------------------------
//      rules for quiz-topics
//----------------------------------

path /quiz-topics/{quizID}/{autotopicID} is QuestionBankTopics{

    /subtopics {

        validate() {this.hasChildren(['autoSubTopicID']);}
        /{autoSubTopicID} is AutoSubTopicID{
        }

        /{autoSubTopicID}/questions/{questions}{
            validate() { this.isBoolean() }
        }


    }

    /questions/{questionsID}{
        validate() { this.isBoolean() }
    }


}


//----------------------------------
//      rules for quiz-questions
//----------------------------------

path /quiz-questions/{quizID}/{questionID} is QuestionID{



}

//----------------------------------
//      rules for quiz-answers
//----------------------------------

path /quiz-answers/{quizID}/{questionID} is QuizAnswers{

    /options {
        validate() {this.hasChildren(['optionID']);}
        /{optionID} is OptionID{


        }
    }
}
//----------------------------------
//      rules for quiz-answer-sheet
//----------------------------------

path /quiz-answer-sheet/{groupid}/{quizid}/{userid}/{questionID} is QuestionIDGroupid{

}








//----------------------------------
//      TYPING *** TYPING *** TYPING
//----------------------------------


//----------------------------------
//      type definition for member type
//----------------------------------

type MemberTypeValid {
    "member-type": MemberType
}

//----------------------------------
//      type definition for QuestionBank
//----------------------------------
type QuestionBank {
    timestamp: TimeStampNumber,
    title: String,
    desc: String
}

//----------------------------------
//      type definition for QuestionBankTopics
//----------------------------------
type QuestionBankTopics{
    timestamp: TimeStampNumber,
    title: String,
    desc: String,
    subtopics: Object,
    question: Object
}


//----------------------------------
//      type definition for AutoSubTopicID
//----------------------------------

type AutoSubTopicID {

    timestamp: TimeStampNumber,
    title: String,
    desc: String,
    questions: Object

    //AutoSubTopicID: Object

}

//----------------------------------
//      type definition for Quizes
//----------------------------------

type Quizes{

        title: String,
        desc: String,
        duration: Number,
        "num-questions": Number

}

//----------------------------------
//      type definition for QuestionID
//----------------------------------
type QuestionID{

    title: String,
    type: TypeValidation,
    desc: String,
   options: Optiontype

}

type Optiontype {
    $optionID: Object
    validate() { this.hasChildren(["optionID"])}
}

//----------------------------------
//      type definition for QuizAnswers
//----------------------------------
type QuizAnswers{
    title: String,
    type: TypeValidation,
    "desc-html": String,
    "discussion-html": String,
    options: Optiontype

}

//----------------------------------
//      type definition for OptionID
//----------------------------------
type OptionID{
    html: String,
    correct: Boolean,
    "discussion-html": String

}


type QuestionIDGroupid{
    optionID: Boolean,
    correct: Boolean
}





//----------------------------------
//      EXTENSION *** EXTENSION *** EXTENSION
//----------------------------------


//----------------------------------
//      extension for NumberForMemberType
//----------------------------------

type MemberType extends Number {
    validate() { this.val() == 1 || this.val() == 2 }
}


//----------------------------------
//      extension for TimeStampNumber
//----------------------------------

type TimeStampNumber extends Number {
    validate() { this.val() <= Date.now }
}

//----------------------------------
//      extension for TypeValidation
//----------------------------------

type TypeValidation extends Number{
    validate() { this.val() == 1 || this.val() == 2 || this.val() == 3 }
}

//----------------------------------










